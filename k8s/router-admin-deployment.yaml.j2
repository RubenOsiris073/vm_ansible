apiVersion: v1
kind: Namespace
metadata:
  name: {{ router_admin_namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: router-admin
  namespace: {{ router_admin_namespace }}
  labels:
    app: router-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: router-admin
  template:
    metadata:
      labels:
        app: router-admin
    spec:
      containers:
        - name: router-admin
          image: router-admin:local
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: router-admin
  namespace: {{ router_admin_namespace }}
  labels:
    app: router-admin
spec:
  type: ClusterIP
  selector:
    app: router-admin
  ports:
    - name: http
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: router-admin
  namespace: {{ router_admin_namespace }}
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - {{ router_admin_hostname }}
      secretName: routerlab-tls
  rules:
    - host: {{ router_admin_hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: router-admin
                port:
                  number: 80
